on:
  workflow_call:

jobs:
  sync-diffs-with-template-builder:
    name: "Track psh configuration files"
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'platformsh-templates' && github.event.commits[0].author.name != 'GitHub Action' }}
    steps:
      - name: 'get repo'
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.TEMPLATES_GITHUB_TOKEN }}

      ####
      # @todo move the list of configuration files we want to track to an organizational variable?
      ####
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v29
        with:
          files: |
            .platform.app.yaml
            .platform/routes.yaml
            .platform/services.yaml
            .platform/applications.yaml

      - name: 'Set up Github token'
        id: setup-gh-token
        shell: bash
        run: echo "GITHUB_TOKEN=${{ secrets.TEMPLATES_GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: "Clone template-builder"
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.TEMPLATES_GITHUB_TOKEN }}
          repository: platformsh/template-builder
          path: template-builder

      - name: 'set git config'
        shell: bash
        run: |
          git config --global user.email "devrel@internal.platform.sh"
          git config --global user.name "platformsh-devrel"

      - name: "Sync updated psh configuration files"
        run: |
          if [ "${{ steps.changed-files.outputs.all_changed_files }}" == "" ];then
              echo "::notice::No relevant files modified. All is well."
          else
              # Get current template name.
              arrIN=(${GITHUB_REPOSITORY//\// })
              TEMPLATE=${arrIN[1]}
              SYNC_BRANCH=sync-$TEMPLATE

              # Clone template-builder, and create a new branch that matches changes in template repo.
              cd template-builder
              git checkout -b $SYNC_BRANCH

              # Copy and stage the changed files
              echo "Syncing revisions into template-builder"
              NL=$'\n'
              msg="Synching $GITHUB_REPOSITORY ($GITHUB_SHA).${NL}"

              for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
                echo "Syncing $file"
                cp ../$file templates/$TEMPLATE/files/$file
                git add templates/$TEMPLATE/files/$file
                msg="${msg} Updates templates/${TEMPLATE}/files/${file}.${NL}"
                echo "::notice::The configuration file ${file} has been changed and will be added to a PR for Template Builder."
              done

              # Commit and push to template-builder.
              echo "Commit and push"
              # git add .
              git commit -m "${msg}"
              git status
              git push origin ${SYNC_BRANCH}

              prTitle="Sync: matching ${GITHUB_REPOSITORY}"
              prBody="Syncing updates for template ${TEMPLATE} made in the latest [pull request](https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA})."

              # Create the corresponding PR.
              prURL=$(gh pr create --head ${SYNC_BRANCH} --title "${prTitle}" --body "${prBody}")

              if [ -z "${prURL} ]; then
                echo "::warning::Creating a PR in template builder for the latest changes failed."
                echo "::debug::Command issued was:"
                prCommand="pr create --head \"${SYNC_BRANCH}\" --title \"${prTitle}\" --body \"${prBody}\""
                echo "::debug::${prCommand}"
              else
                echo "::notice::Created a PR in template builder with the latest changes: ${prURL}."
              fi
          fi